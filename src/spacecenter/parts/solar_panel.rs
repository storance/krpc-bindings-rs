use super::Part;
use crate::codec::{Decode, Encode};
use crate::{remote_type, RemoteEnum, RemoteObject};

remote_type!(
/// A solar panel. Obtained by calling `Part::solar_panel().`
object SpaceCenter.SolarPanel {
    properties: {
        {
            Part {
                /// Returns the part object for this solar panel.
                ///
                /// **Game Scenes**: All
                get: part -> Part
            }
        }
        {
            Deployable {
                /// Returns whether the solar panel is deployable.
                ///
                /// **Game Scenes**: All
                get: is_deployable -> bool
            }
        }
        {
            Deployed {
                /// Returns whether the solar panel is extended.
                ///
                /// **Game Scenes**: All
                get: is_deployed -> bool,
                /// Sets whether the solar panel is extended.
                ///
                /// **Game Scenes**: All
                set: set_deployed(bool)
            }
        }
        {
            State {
                /// Returns the current state of the solar panel.
                ///
                /// **Game Scenes**: All
                get: state -> SolarPanelState
            }
        }
        {
            EnergyFlow {
                /// Returns the current amount of energy being generated by the solar panel,
                /// in units of charge per second.
                ///
                /// **Game Scenes**: All
                get: energy_flow -> f32
            }
        }
        {
            SunExposure {
                /// Returns the current amount of sunlight that is incident on the solar panel, as
                /// a percentage. A value between 0 and 1.
                ///
                /// **Game Scenes**: All
                get: sun_exposure -> f32
            }
        }
    }
});

remote_type!(
    /// The state of a solar panel.
    enum SolarPanelState {
        /// Solar panel is fully extended.
        Extended = 0,
        /// Solar panel is fully retracted.
        Retracted = 1,
        /// Solar panel is being extended.
        Extending = 2,
        /// Solar panel is being retracted.
        Retracting = 3,
        /// Solar panel is broken
        Broken = 4,
    }
);
